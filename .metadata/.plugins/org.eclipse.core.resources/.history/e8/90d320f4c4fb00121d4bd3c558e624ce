package pubsub;

import siena.Filter;
import siena.ThinClient;
import siena.comm.InvalidSenderException;
import java.util.StringTokenizer;

public class SienaPubSubEngine implements PubSubEngine{
	
	private ThinClient SienaClient;
	private String ClientID;
	private String BrokerID;
	
	public int start(String ClientID, String BrokerID) {
		this.ClientID = ClientID;
		this.BrokerID = BrokerID;
		
		return 0;
	}

	public int connect(String host, int port) {
		try {
			SienaClient = new ThinClient (BrokerID,ClientID);
		} catch (InvalidSenderException e) {
			e.printStackTrace();
		}

		return 0;
	}

	@Override
	public int advertise(String predicates) {
		
		StringTokenizer StrTok = new StringTokenizer(predicates,',')
		//Filter AdvertFilter = new Filter();
		//AdvertFilter.
		//SienaClient.advertise(predicates, ClientID);
		return 0;
	}

	@Override
	public int unadvertise(int id) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void subscribe(String predicates) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int unsubscribe(int id) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int publish(String predicates) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int registerListener() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int disconnect() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int stop() {
		// TODO Auto-generated method stub
		return 0;
	}

}
